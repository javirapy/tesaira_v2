// Generated by https://quicktype.io

class DatosCensoModel {
  List<ItemModel> microterritorios;
  List<ItemModel> pertenenciaViviendas;
  List<ItemModel> tiposParedes;
  List<ItemModel> tiposTechos;
  List<ItemModel> tiposPisos;
  List<ItemModel> aguaAbastecimientos;
  List<ItemModel> aguaterias;
  List<ItemModel> eliminacionBasuras;
  List<ItemModel> tiposDesagueBanios;
  List<ItemModel> tiposBanios;
  List<ItemModel> barriosCompanias;
  List<ItemModel> tiposDocumentos;
  List<ItemModel> estadosCiviles;
  List<ItemModel> relacionesPersonas;
  List<ItemModel> etnia;
  List<ItemModel> nivelesEducativos;
  List<ItemModel> situacionesLaborales;
  List<ItemModel> ocupaciones;
  List<ItemModel> afecciones;
  List<ItemModel> nacionalidades;
  List<ItemModel> paisOrigen;

  DatosCensoModel({
    this.microterritorios,
    this.pertenenciaViviendas,
    this.tiposParedes,
    this.tiposTechos,
    this.tiposPisos,
    this.aguaAbastecimientos,
    this.aguaterias,
    this.eliminacionBasuras,
    this.tiposDesagueBanios,
    this.tiposBanios,
    this.barriosCompanias,
    this.tiposDocumentos,
    this.estadosCiviles,
    this.relacionesPersonas,
    this.etnia,
    this.nivelesEducativos,
    this.situacionesLaborales,
    this.ocupaciones,
    this.afecciones,
    this.nacionalidades,
    this.paisOrigen
  });

  factory DatosCensoModel.fromJson(Map<String, dynamic> json) {
      
      var listmicroterritorios = json['microterritorios'] as List;
      List<ItemModel> microterritorios = listmicroterritorios.map((i) => ItemModel.fromJson(i)).toList();

      
      var listpertenenciaViviendas = json['pertenencia_viviendas'] as List;
      List<ItemModel> pertenenciaViviendas = listpertenenciaViviendas.map((i) => ItemModel.fromJson(i)).toList();
      
      var listtiposParedes = json['tipos_paredes'] as List;
      List<ItemModel> tiposParedes = listtiposParedes.map((i) => ItemModel.fromJson(i)).toList();

      var listtiposTechos = json['tipos_techos'] as List;
      List<ItemModel> tiposTechos = listtiposTechos.map((i) => ItemModel.fromJson(i)).toList();

      var listtiposPisos = json['tipos_pisos'] as List;
      List<ItemModel> tiposPisos = listtiposPisos.map((i) => ItemModel.fromJson(i)).toList();

      var listaguaAbastecimientos = json['agua_abastecimientos'] as List;
      List<ItemModel> aguaAbastecimientos = listaguaAbastecimientos.map((i) => ItemModel.fromJson(i)).toList();

      var listaguaterias = json['aguaterias'] as List;
      List<ItemModel> aguaterias = listaguaterias.map((i) => ItemModel.fromJson(i)).toList();

      var listeliminacionBasuras = json['eliminacion_basuras'] as List;
      List<ItemModel> eliminacionBasuras = listeliminacionBasuras.map((i) => ItemModel.fromJson(i)).toList();

      var listtiposDesagueBanios = json['tipos_desague_banios'] as List;
      List<ItemModel> tiposDesagueBanios = listtiposDesagueBanios.map((i) => ItemModel.fromJson(i)).toList();

      var listtiposBanios = json['tipos_banios'] as List;
      List<ItemModel> tiposBanios = listtiposBanios.map((i) => ItemModel.fromJson(i)).toList();

      var listbarrios = json['barrios_companias'] as List;
      List<ItemModel> barriosCompanhias = listbarrios.map((i) => ItemModel.fromJson(i)).toList();

      var listTipoDoc = json['tipos_documentos']  as List;
      List<ItemModel> tiposDocumento = listTipoDoc.map((i) => ItemModel.fromJson(i)).toList();

      var listEstados = json['estados_civiles']  as List;
      List<ItemModel> estadosCiviles = listEstados.map((i) => ItemModel.fromJson(i)).toList();

      var listRelaciones = json['relaciones_personas']  as List;
      List<ItemModel> relacionesPersonas = listRelaciones.map((i) => ItemModel.fromJson(i)).toList();

      var listniveles_educativos = json['niveles_educativos']  as List;
      List<ItemModel> nivelesEducativos = listniveles_educativos.map((i) => ItemModel.fromJson(i)).toList();

      var listsituaciones_laborales = json['situaciones_laborales']  as List;
      List<ItemModel> situacionesLaborales = listsituaciones_laborales.map((i) => ItemModel.fromJson(i)).toList();

      var listocupaciones = json['ocupaciones']  as List;
      List<ItemModel> ocupaciones = listocupaciones.map((i) => ItemModel.fromJson(i)).toList();

      var listafecciones = json['afecciones']  as List;
      List<ItemModel> afecciones = listafecciones.map((i) => ItemModel.fromJson(i)).toList();

      var listetnias = json['etnia']  as List;
      List<ItemModel> etnias = listetnias.map((i) => ItemModel.fromJson(i)).toList();

      var listnacionalidades = json['nacionalidades']  as List;
      List<ItemModel> nacionalidades = listnacionalidades.map((i) => ItemModel.fromJson(i)).toList();

      var listPaisOrigne = json['pais_origen_documento']  as List;
      List<ItemModel> paisesOrigen = listPaisOrigne.map((i) => ItemModel.fromJson(i)).toList();
      
      
      
      return new DatosCensoModel(
        microterritorios  : microterritorios,
        pertenenciaViviendas  : pertenenciaViviendas,
        tiposParedes  : tiposParedes,
        tiposTechos : tiposTechos,
        tiposPisos  : tiposPisos,
        aguaAbastecimientos : aguaAbastecimientos,
        aguaterias  : aguaterias,
        eliminacionBasuras  : eliminacionBasuras,
        tiposDesagueBanios  : tiposDesagueBanios,
        tiposBanios : tiposBanios,
        barriosCompanias: barriosCompanhias,
        tiposDocumentos : tiposDocumento,
        estadosCiviles : estadosCiviles,
        relacionesPersonas : relacionesPersonas,
        etnia : etnias,
        nivelesEducativos : nivelesEducativos,
        situacionesLaborales : situacionesLaborales,
        ocupaciones : ocupaciones,
        afecciones : afecciones,
        nacionalidades: nacionalidades,
        paisOrigen: paisesOrigen
      );
    }
}

class ItemModel {
  int id;
  String descripcion;
  dynamic estado;
  dynamic deleted;
  String nombre;
  int usfId;
  String gentilicio;

  ItemModel({
    this.id,
    this.descripcion,
    this.estado,
    this.deleted,
    this.nombre,
    this.usfId,
    this.gentilicio
  });

  factory ItemModel.fromJson(Map<String, dynamic> json) => new ItemModel(
      id : json['id']??null,
      descripcion : json['descripcion']??null,
      estado : json['estado']??null,
      deleted : json['deleted']??null,
      nombre : json['nombre']??null,
      usfId : json['usfId']??null,
      gentilicio : json['gentilicio']??null
  );
}


class DatosCensoInsert{
   int microterritorio_id;
   int barrios_compania_id;
   int lat;
   int lon;
   int area;
   int numero_casa;
   int telefono_vivienda;
   int direccion;
   int referencia;
   int pertenencia_vivienda_id;
   int tipos_parede_id;
   int tipos_techo_id;
   int tipos_piso_id;
   int hacinamiento;
   int aguateria_id;
   int eliminacion_basura_id;
   int tipos_desague_banio_id;
   int tipos_banio_id;
   int luz_electrica;
   int tv;
   int telefono_linea_baja;
   int telefono_celular;
   int heladera;
   int automovil;
   int motocicleta;
   int taxi;
   int transporte_publico;
   int carreta;
   int caballo;
   int seguro_publico;
   int seguro_privado ;
   int farmacia;
   int medico_naturalista;
   int dependencia_id;
   int cantidad;

  DatosCensoInsert({
    this.microterritorio_id,
    this.barrios_compania_id,
    this.lat,
    this.lon,
    this.area,
    this.numero_casa,
    this.telefono_vivienda,
    this.direccion,
    this.referencia,
    this.pertenencia_vivienda_id,
    this.tipos_parede_id,
    this.tipos_techo_id,
    this.tipos_piso_id,
    this.hacinamiento,
    this.aguateria_id,
    this.eliminacion_basura_id,
    this.tipos_desague_banio_id,
    this.tipos_banio_id,
    this.luz_electrica,
    this.telefono_linea_baja,
    this.telefono_celular,
    this.heladera,
    this.tv,
    this.automovil,
    this.motocicleta,
    this.taxi,
    this.transporte_publico,
    this.carreta,
    this.caballo,
    this.seguro_publico,
    this.seguro_privado ,
    this.farmacia,
    this.medico_naturalista,
    this.dependencia_id,
    this.cantidad
  });


}